pipeline {

    agent none

    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Compiling result app'
                dir('result'){
                    sh 'npm install'
                    sh 'npm ls'
                }
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Running Unit Tests on Result App'
                dir('result'){
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('docker-package') {
            agent any
            when{
                changeset "**/result/**"
                //branch 'master'
            }
            steps {
                echo 'Packaging result app with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def resultImage = docker.build("boyanstoyanovich/result:v${env.BUILD_ID}", "./result") 
                        resultImage.push()
                        //resultImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    
    post{
        always{
            echo 'Pipeline for result is complete..'
        }
        failure{
            slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}